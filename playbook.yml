---

- name: Provision 100 OpenShift Virtualization VMs using Template
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vars/osv_vms.yml

  tasks:
    - name: Generate VM name list
      set_fact:
        vm_names: >-
          {{ query(
              'ansible.builtin.sequence',
              'start=' ~ (vm_start_index | string),
              'count=' ~ (vm_count | string),
              'format=' ~ (vm_prefix ~ '-%0' ~ (vm_padding | string) ~ 'd')
          ) }}

    - name: Show generated VM names
      debug:
        var: vm_names

#    - name: Fail if KUBECONFIG is not set
#      ansible.builtin.assert:
#        that:
#          - ansible_env.KUBECONFIG is defined
#        fail_msg: "Environment variable KUBECONFIG must be set for kubernetes.core.k8s to authenticate."
#      run_once: true

    - name: Create Multiple OpenShift Virtual Machines from Template
      kubernetes.core.k8s:
        state: present
        namespace: "{{ ocp_namespace }}"
        definition: "{{ lookup('template', 'templates/vm-manifest.yml.j2') }}"
      loop: "{{ vm_names }}"
      loop_control:
        loop_var: item
        index_var: vm_index
      vars:
        # 0-based vm_index from loop_control is perfect for offsets
        current_vm_ip: >-
          {{
            (
              (network_cidr | ansible.utils.ipaddr('network') | ansible.utils.ipaddr('address'))
              | ansible.utils.ipmath(ip_start_octet + vm_index)
            )
            ~ '/' ~ (network_cidr | ansible.utils.ipaddr('prefix'))
          }}
      register: ocv_vm_deploy_results
      # RECOMMENDED: Control concurrency to avoid overwhelming the API server
      # Run 5 deployments concurrently
      throttle: 5

      # Or, to run a block of 5, wait for them, then run the next block of 5:
      # serial: 5 

    - name: Display VM Creation Status
      ansible.builtin.debug:
        msg: "Started creation of VM '{{ item.item }}' (Changed: {{ item.changed }})"
      loop: "{{ ocv_vm_deploy_results.results }}"
      when: item.changed
